proxy_cache_path /application/docker/data/nginx_cache levels=1:2 keys_zone=mobile:50m inactive=120m max_size=2g use_temp_path=off;
proxy_cache_key "$scheme$request_method$host$request_uri";

server {
      listen 80 default_server;
      listen [::]:80 default_server;
      server_name *.mawaqit.net;
      access_log off;
      # redirect HTTP to HTTPS
      return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name *.mawaqit.net;

    # SSL Certificates
    ssl_certificate "/application/docker/data/ssl/mawaqit.net.pem";
    ssl_certificate_key "/application/docker/data/ssl/mawaqit.net.key";

    location  / {
        proxy_buffering on;
        proxy_cache mobile;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Proxy-Cache $upstream_cache_status;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_pass http://localhost:81/;
    }
}

server {
    listen 81;
    root /application/web;
    access_log off;
    index app.php;
    server_name mawaqit.net pp.mawaqit.net;
    client_max_body_size 50M;
    proxy_buffers 4 64k;
    proxy_buffer_size 64k;

    # Maintenance
    set $maintenance off;
    if (-f /application/docker/data/maintenance) {
         set $maintenance on;
    }
    if ($http_mawaqit = bypass_maintenance) {
         set $maintenance off;
    }
    if ($maintenance = on) {
        return 503;
    }
    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /maintenance.html break;
    }

    location / {
            try_files $uri @rewriteapp;
    }

    location ~ ^/app\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 300;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param HTTPS on;
        include fastcgi_params;
        internal;

        if ($request_uri ~ "^/api") {
            add_header 'Access-Control-Allow-Origin' '*';
        }
    }

    location ~* \.(jpg|jpeg|gif|png|ico|gz|zip|svg|mp4|mp3|css|js|eot|woff|woff2|ttf|json|txt|pptx)$ {
        expires 365d;
        try_files $uri @rewriteapp;
     }

    location @rewriteapp {
        rewrite ^(.*)$ /app.php/$1 last;
    }

    location ~ \.php$ {
        return 404;
    }

    set $cache_uri $request_uri;

    location ~ /.well-known {
        allow all;
    }

    # Deny dotfiles
    location ~ /\. { deny all; access_log off; log_not_found off; }
}
